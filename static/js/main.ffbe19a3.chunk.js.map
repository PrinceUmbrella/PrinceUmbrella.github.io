{"version":3,"sources":["react.jpg","MicrosoftLogo.png","googleLogo.png","profileimage.jpg","componet/blinkComponent.js","componet/centerImageComponent.js","componet/HeaderComponent.js","componet/cardComponent.js","componet/experienceComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BlinkLable","props","state","showlabel","label","myFunction","bind","sLb","this","setState","setTimeout","Component","CenterImage","clicked","Fragment","sm","md","size","offset","Container","Row","Col","xs","src","profileImage","className","width","alt","Header","isOpen","toggle","console","log","Navbar","style","backgroundColor","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","NavLink","class","aria-hidden","NavbarText","FlippingCard","isFlipped","handleClick","event","preventDefault","flipDirection","Card","color","text","CardImg","object","frontImage","CardBody","Button","backImage","Experience","Microsoft","ReactLogo","GoogleLogo","App","document","body","Helmet","charSet","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffbe19a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.12f0aa44.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MicrosoftLogo.48cee99c.png\";","module.exports = __webpack_public_path__ + \"static/media/googleLogo.a92fd523.png\";","module.exports = __webpack_public_path__ + \"static/media/profileimage.c7de0c05.jpg\";","import React ,{Component} from 'react';\r\n\r\nclass BlinkLable extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          showlabel: true,\r\n          label: this.props.label\r\n      };\r\n      this.myFunction = this.myFunction.bind(this);\r\n    }\r\n    myFunction(){\r\n      var sLb = ! (this.state.showlabel);\r\n      this.setState({showlabel: sLb});\r\n    }\r\n    render(){\r\n      return (\r\n        <div>\r\n          {(this.state.showlabel)?this.state.label:<span>&nbsp;&nbsp;</span>}\r\n        </div>\r\n       );\r\n    }\r\n    componentDidUpdate() {\r\n       setTimeout(this.myFunction, 1000)\r\n    }\r\n    componentDidMount(){\r\n      setTimeout(this.myFunction, 1000)\r\n    }\r\n  }\r\n\r\n  export default BlinkLable;","/*jshint esversion: 6 */ \r\nimport React ,{Component} from 'react';\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col   \r\n} from 'reactstrap';\r\nimport profileImage from \"../profileimage.jpg\";\r\nimport BlinkLable from './blinkComponent';\r\n\r\n\r\nclass CenterImage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            clicked:false\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <React.Fragment>\r\n          <div><BlinkLable label=\">\"/></div>\r\n          \r\n          <div sm=\"12\" md={{ size: 6, offset: 5 }}>\r\n          <Container>\r\n            <Row>\r\n              <Col xs={12} >\r\n                <img src={profileImage} className=\"rounded\" width=\"100%\" alt=\"test\"/>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <div className=\"container jumbotron\">\r\n                  <p>\r\n                    Temperature is the degree of hotness or coldness of an object. When we talk about something feeling hot (like the soup we drink when were sick) or cold (like the snow, especially if youre not wearing gloves), were talking about temperature.\r\n                    The temperature of an object, usually measured in degrees-Fahrenheit or degrees-Celsius, tells us how much heat, or energy, the object has. A boiling cup of water has very active molecules moving around very quickly and producing the heat we feel on our hands and faces. Colder objects dont have as much energy. Their molecules are much less active.\r\n                  </p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          </div>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CenterImage;\r\n","/*jshint esversion: 6 */ \r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavbarText, \r\n  NavLink\r\n} from 'reactstrap';\r\nimport {NavLink as ReactLink} from 'react-router-dom';\r\n\r\nexport default class Header extends Component \r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen:false\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    };\r\n    toggle()\r\n    {\r\n        console.log(\"Before: \", this.state.isOpen);\r\n        this.setState({\r\n            isOpen:!this.state.isOpen\r\n            });\r\n        console.log(\"Before: \", this.state.isOpen);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar style={{backgroundColor: '#000'}} dark expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Leoul Tilahun</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <ReactLink className=\"nav-link\" to=\"/experience\">Work Experiences</ReactLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" href=\"https://github.com/princeUmbrella\">\r\n                                <i class=\"fa fa-github\" aria-hidden=\"true\"></i> {\" \"}GitHub\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" href=\"https://www.linkedin.com/in/leoultilahun\">\r\n                                <i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i> {\" \"}LinkedIn\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <NavbarText>V 0.1</NavbarText>\r\n                    </Collapse>\r\n                    \r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*jshint esversion: 6 */ \r\nimport React, { Component } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport { Card, \r\n        CardImg, \r\n        CardText, \r\n        CardBody, \r\n        CardTitle,\r\n        Button} from 'reactstrap';\r\n\r\n// TODO Create another component called card where we can pass the properties then load it inside the projectsComponent.js\r\nclass FlippingCard extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n          isFlipped: false\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        this.setState({ isFlipped: !this.state.isFlipped });\r\n      }\r\n    render(){\r\n        return(\r\n            <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"horizontal\">\r\n            <Card color=\"dark\" text=\"white\" onClick={this.handleClick}>\r\n              <CardImg object src={this.props.frontImage} alt={\"profile\"}></CardImg>\r\n              <CardBody>\r\n                <Button color=\"danger\" onClick={this.handleClick}>Click to flip</Button>\r\n              </CardBody>\r\n            </Card>\r\n     \r\n            <Card onClick={this.handleClick}>\r\n              <CardImg object src={this.props.backImage} alt={\"profile\"}></CardImg>\r\n              <CardBody>\r\n                <Button color=\"primary\" onClick={this.handleClick}>Click to flip</Button>\r\n              </CardBody>\r\n            </Card>\r\n          </ReactCardFlip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FlippingCard;\r\n","/*jshint esversion: 6 */ \r\nimport React, { Component } from 'react';\r\nimport FlippingCard from './cardComponent';\r\nimport Microsoft from \"../MicrosoftLogo.png\";\r\nimport ReactLogo from \"../react.jpg\";\r\nimport GoogleLogo from \"../googleLogo.png\";\r\n\r\nclass Experience extends Component\r\n{\r\n    constructor() {\r\n        super();\r\n          this.state = {\r\n          isFlipped: false\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        this.setState({ isFlipped: !this.state.isFlipped });\r\n      }\r\n    render(){\r\n        return(     \r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FlippingCard frontImage= {Microsoft} backImage={ReactLogo}/>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FlippingCard frontImage= {GoogleLogo} backImage={ReactLogo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FlippingCard frontImage= {GoogleLogo} backImage={ReactLogo}/>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FlippingCard frontImage= {Microsoft} backImage={ReactLogo}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Experience;\r\n","/*jshint esversion: 6 */ \nimport React, {Component} from 'react';\nimport {Switch, Route, Redirect, BrowserRouter} from 'react-router-dom';\nimport CenterImage from \"../src/componet/centerImageComponent\";\nimport Header from \"../src/componet/HeaderComponent\";\nimport Experience from \"../src/componet/experienceComponent\";\nimport {Helmet} from \"react-helmet\";\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n  }\n  componentDidMount() {\n    document.body.style.backgroundColor = \"white\";\n  }\n  render(){\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Helmet>\n              <meta charSet=\"utf-8\" />\n              <title>Leoul Tilahun</title>\n            </Helmet>\n          <Header/>\n          <Switch>\n              <Route path=\"/home\" component={()=><CenterImage/>}/>\n              <Route exact path=\"/experience\" component={()=><Experience />}/>\n              <Redirect to=\"/home\"/>\n          </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*jshint esversion: 6 */ \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}